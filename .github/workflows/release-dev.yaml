name: Release (Development version for A2)

on:
  push:
    tags: ["**"]

jobs:
  run-tests:
    if: false
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - name: Set up Node
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b
        with:
          node-version: 20.15.0
          cache: "npm"

      - name: Install Node dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Test
        run: npm run test

  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db

      - name: Check out
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - name: Assert matching Tag and Version
        run: |
          ABICUS_VERSION=$(jq -r '.version' package.json)
          if [[ "v$ABICUS_VERSION" != "${{ github.ref_name }}" ]]; then
            echo "Version in package.json does not match tag!"
            echo "Version in package.json: \"v$ABICUS_VERSION\""
            echo "Version given as tag:    \"${{ github.ref_name }}\""
            exit 1
          fi

      - name: Build
        id: docker-build
        uses: docker/build-push-action@5cd11c3a4ced054e52742c5fd54dca954e0edd85
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true
          build-args: GIT_REF=${{ github.sha }}

      - name: Assume AWS role
        uses: digabi/workflows-common/actions/assume-digabi-aws-role@main
        with:
          aws-account-id: ${{ secrets.UTILITY_AWS_ACCOUNT_ID }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076

      - name: Tag Docker Image
        run: docker tag ${{ steps.docker-build.outputs.imageid }} ${{ steps.login-ecr.outputs.registry }}/abicus:${{ github.ref_name }}

      - name: Push Docker Image
        run: docker push ${{ steps.login-ecr.outputs.registry }}/abicus:${{ github.ref_name }}
